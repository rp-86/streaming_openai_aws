AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  AccountId:
    Type: Number
    Default: 387507663773


Resources:
  socketAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
        Name: "socketAPI"
        ProtocolType: WEBSOCKET
        RouteSelectionExpression: "$request.body.action"

  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
         ApiId: !Ref socketAPI
         IntegrationType: AWS_PROXY
         CredentialsArn: 'arn:aws:iam::387507663773:role/core-lambda-roles'
         IntegrationUri: !Sub 
          - "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConnectLambdaARN}/invocations"
          - ConnectLambdaARN: !GetAtt ConnectLambda.Arn
  
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
         RouteKey: $connect
         ApiId: !Ref socketAPI
         OperationName: ConnectRoute
         Target: !Sub "integrations/${ConnectInteg}"

  ConnectLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: 'connect-lambda'
      CodeUri: lambdas/connect_lambda/
      Role: 'arn:aws:iam::387507663773:role/core-lambda-roles'
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 600

  ConnectLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
         - socketAPI
    Properties:
      FunctionName: !Ref ConnectLambda
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub '${AWS::AccountId}'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AccountId}:${socketAPI}/*/$connect'

  StreamingOpenai:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: 'streaming-openai'
      CodeUri: lambdas/streaming_lambda/
      Role: 'arn:aws:iam::387507663773:role/core-lambda-roles'
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 600
      Layers:
        - !Ref OpenaiLayer
      Environment:
        Variables:
          openai_key: "openai_key"
          region: !Sub "${AWS::Region}"
          api_endpoint: !Sub " https://${socketAPI}.execute-api.${AWS::Region}.amazonaws.com/dev/"
  
  OpenaiInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
         ApiId: !Ref socketAPI
         IntegrationType: AWS_PROXY
         CredentialsArn: 'arn:aws:iam::387507663773:role/core-lambda-roles'
         IntegrationUri: !Sub 
          - "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConnectLambdaARN}/invocations"
          - ConnectLambdaARN: !GetAtt StreamingOpenai.Arn
  
  OpenaiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
         RouteKey: openai
         ApiId: !Ref socketAPI
         OperationName: OpenaiRoute
         Target: !Sub "integrations/${OpenaiInteg}"

  StreamingLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
         - socketAPI
    Properties:
      FunctionName: !Ref StreamingOpenai
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub '${AWS::AccountId}'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AccountId}:${socketAPI}/*/openai'
  
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
         ApiId: !Ref socketAPI
         IntegrationType: AWS_PROXY
         CredentialsArn: 'arn:aws:iam::387507663773:role/core-lambda-roles'
         IntegrationUri: !Sub 
          - "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConnectLambdaARN}/invocations"
          - ConnectLambdaARN: !GetAtt DiconnectLambda.Arn
  
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
         RouteKey: $disconnect
         ApiId: !Ref socketAPI
         OperationName: DisconnectRoute
         Target: !Sub "integrations/${DisconnectInteg}"

  DiconnectLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: 'disconnect-lambda'
      CodeUri: lambdas/disconnect_lambda/
      Role: 'arn:aws:iam::387507663773:role/core-lambda-roles'
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 600

  DisconnectLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
         - socketAPI
    Properties:
      FunctionName: !Ref DiconnectLambda
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceAccount: !Sub '${AWS::AccountId}'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AccountId}:${socketAPI}/*/$connect'


  OpenaiLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: 'openai-layer'
      Description: Layer for openai
      ContentUri: layers/openai/
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: dev
      Description: dev Stage
      ApiId: !Ref socketAPI

  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
         - ConnectRoute
         - OpenaiRoute
    Properties:
      ApiId: !Ref socketAPI


Outputs:
  socketAPI:
    Description: URL for the API Gateway
    Value: !Ref socketAPI